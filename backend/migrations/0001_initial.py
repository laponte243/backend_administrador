# Generated by Django 3.2.7 on 2022-01-21 19:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Almacen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.TextField(blank=True, help_text='Nombre del almacen', max_length=220)),
                ('activo', models.BooleanField(default=False, help_text='El almacen esta activo?')),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.TextField(blank=True, help_text='Razon social del cliente', max_length=150)),
                ('identificador', models.TextField(blank=True, help_text='Numero de indentificacion fiscal', max_length=150)),
                ('ubicacion', models.TextField(blank=True, help_text='Ubicacion o direccion del cliente', max_length=150)),
                ('credito', models.BooleanField(default=False, help_text='Se le puede vender a credito?')),
                ('imagen', models.ImageField(help_text='Imagen o logo asociado al cliente', null=True, upload_to='clientes')),
                ('activo', models.BooleanField(default=False, help_text='Esta activo?')),
            ],
        ),
        migrations.CreateModel(
            name='Compra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_factura', models.DateTimeField(auto_now_add=True, help_text='fecha de la factura de compra')),
                ('numero_factura', models.TextField(help_text='numero de la factura', max_length=150)),
                ('numero_control', models.TextField(help_text='numero de control', max_length=150, null=True)),
                ('subtotal', models.FloatField(default=0, help_text='subtotal de la factura')),
                ('impuestos', models.FloatField(default=0, help_text='total en impuestos')),
                ('total', models.FloatField(default=0, help_text='total en factura')),
                ('tipo_pago', models.TextField(help_text='tipo de pago utilizado', max_length=150)),
                ('credito', models.BooleanField(default=False, help_text='la factura es a credito?')),
                ('dias_credito', models.IntegerField(default=0, help_text='cuantos dias de credito?', null=True)),
                ('Proveedor', models.ForeignKey(help_text='proveedor asoaciado', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.cliente')),
            ],
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.TextField(help_text='Razon social de la empresa', max_length=150)),
                ('direccion_fiscal', models.TextField(help_text='direccion fiscal de la empresa', max_length=150)),
                ('logo', models.ImageField(help_text='logo de la empresa', null=True, upload_to='empresas')),
            ],
        ),
        migrations.CreateModel(
            name='Factura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_empresa', models.TextField(help_text='empresa asociada', max_length=150)),
                ('telefonocontacto_empresa', models.TextField(help_text='empresa asociada', max_length=150)),
                ('direccion_empresa', models.TextField(help_text='empresa asociada', max_length=150)),
                ('nombre_cliente', models.TextField(help_text='Nombre del cliente en la venta', max_length=150)),
                ('identificador_fiscal', models.TextField(help_text='Identificador fiscal del cliente en la venta', max_length=150)),
                ('direccion_cliente', models.TextField(help_text='telefono del cliente en la venta', max_length=150)),
                ('telefono_cliente', models.TextField(help_text='empresa asociada', max_length=150)),
                ('nombre_vendedor', models.TextField(help_text='vendedor asociado', max_length=150, null=True)),
                ('telefono_vendedor', models.TextField(help_text='empresa asociada', max_length=150)),
                ('fecha_factura', models.TextField(help_text='fecha de generacion de la venta', max_length=150)),
                ('subtotal', models.TextField(default=0, help_text='subtotal de la venta', max_length=150)),
                ('monto_exento', models.TextField(default=0, help_text='monto exento de la proforma', max_length=150)),
                ('impuesto', models.TextField(default=0, help_text='monto exento de la proforma', max_length=150)),
                ('total', models.TextField(default=0, help_text='total de la venta', max_length=150)),
                ('tipo_pago', models.TextField(help_text='tipo de pago utilizado por el cliente de la venta', max_length=150)),
                ('credito', models.TextField(default=False, help_text='La venta se realizo a credito?')),
                ('dias_credito', models.TextField(default=0, help_text='dias de credito?', null=True)),
                ('nota_entrega', models.TextField(default=False, help_text='fecha de generacion una nota de entrega?')),
            ],
        ),
        migrations.CreateModel(
            name='Instancia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.TextField(help_text='Nombre de la instancia', max_length=150)),
                ('activo', models.BooleanField(default=True, help_text='esta la instancia activa?')),
                ('multiempresa', models.BooleanField(default=True, help_text='esta la instancia es multiempresa?')),
                ('vencimiento', models.DateTimeField(help_text='Fecha de vencimiento de la instancia', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Marca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.TextField(blank=True, help_text='Nombre de la marca', max_length=220)),
                ('logo', models.ImageField(help_text='logo de la marca', null=True, upload_to='marcas')),
                ('instancia', models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia')),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('router', models.CharField(help_text='Nombre la opcion de men√∫', max_length=150)),
                ('orden', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='MenuInstancia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orden', models.IntegerField(default=0)),
                ('instancia', models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia')),
                ('menu', models.ForeignKey(help_text='SuperMenu asociado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='backend.menu')),
                ('parent', models.ForeignKey(help_text='Si el menu es hijo de otro', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='backend.menuinstancia')),
            ],
        ),
        migrations.CreateModel(
            name='Modulo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.TextField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_pedido', models.DateTimeField(auto_now_add=True, help_text='fecha de generacion del pedido')),
                ('cliente', models.ForeignKey(help_text='cliente asociado', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.cliente')),
                ('empresa', models.ForeignKey(help_text='empresa asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.empresa')),
                ('instancia', models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia')),
            ],
        ),
        migrations.CreateModel(
            name='Perfil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activo', models.BooleanField(default=True, help_text='esta el usuario activo?')),
                ('avatar', models.ImageField(help_text='avatar para el usuario', null=True, upload_to='avatars')),
                ('tipo', models.CharField(choices=[('S', 'Super'), ('A', 'Admin'), ('U', 'Usuario'), ('V', 'Vendedor')], default='U', help_text='Tipo de usuario', max_length=1, null=True)),
                ('instancia', models.ForeignKey(help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia')),
                ('usuario', models.OneToOneField(help_text='usuario asociado', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.TextField(blank=True, help_text='Nombre del producto', max_length=150, null=True)),
                ('sku', models.TextField(help_text='SKU del producto', max_length=150)),
                ('servicio', models.BooleanField(default=False, help_text='¬øEs un servicio?')),
                ('lote_producto', models.BooleanField(default=False, help_text='¬øEsta en un lote?')),
                ('costo', models.FloatField(help_text='Costo del producto', null=True)),
                ('exonerado', models.BooleanField(default=False, help_text='¬øEsta exonerado el impuesto?')),
                ('venta_sin_inventario', models.BooleanField(default=False, help_text='¬øSe permite la venta del producto sin inventario?')),
                ('activo', models.BooleanField(default=True, help_text='¬øEl producto esta activo?')),
                ('menejo_inventario', models.BooleanField(default=True, help_text='¬øSe manejara inventario del producto?')),
                ('venta', models.BooleanField(default=True, help_text='¬øEs un producto que se puede vender?')),
                ('instancia', models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia')),
                ('marca', models.ForeignKey(help_text='Marca asociada al producto', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='backend.marca')),
            ],
        ),
        migrations.CreateModel(
            name='Vendedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.TextField(blank=True, help_text='nombre completo del vendedor', max_length=150)),
                ('identificador', models.TextField(blank=True, help_text='nombre completo del vendedor', max_length=150)),
                ('telefono', models.TextField(blank=True, help_text='telefono del vendedor', max_length=150)),
                ('correo', models.TextField(blank=True, help_text='correo asociado al vendedor', max_length=150)),
                ('activo', models.BooleanField(default=False, help_text='Esta activo?')),
                ('instancia', models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia')),
            ],
        ),
        migrations.CreateModel(
            name='Unidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.TextField(help_text='Nombre de la unidad de medida', max_length=30)),
                ('abreviatura', models.TextField(help_text='Abreviatura de la unidad de medida', max_length=10)),
                ('instancia', models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia')),
            ],
        ),
        migrations.CreateModel(
            name='TasaConversion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_tasa', models.DateTimeField(auto_now_add=True, help_text='tasa de conversion del dia')),
                ('valor', models.FloatField(help_text='valor de la tasa de conversion')),
                ('instancia', models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia')),
            ],
        ),
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.TextField(blank=True, help_text='nombre del proveedor', max_length=150)),
                ('identificador', models.TextField(blank=True, help_text='identificador fiscal asociado', max_length=150)),
                ('ubicacion', models.TextField(blank=True, help_text='Ubicacion del proveedor', max_length=150)),
                ('credito', models.BooleanField(default=False, help_text='el proveedor da credito?')),
                ('imagen', models.ImageField(help_text='imagen asociada al proveedor', null=True, upload_to='proveedores')),
                ('empresa', models.ForeignKey(help_text='empresa asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='backend.empresa')),
                ('instancia', models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia')),
                ('marcas', models.ManyToManyField(help_text='marcas asociadas', to='backend.Marca')),
            ],
        ),
        migrations.CreateModel(
            name='Proforma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_cliente', models.TextField(help_text='Nombre del cliente en la proforma', max_length=150)),
                ('identificador_fiscal', models.TextField(help_text='Identificador fiscal del cliente en la venta', max_length=150)),
                ('direccion_cliente', models.TextField(help_text='telefono del cliente en la proforma', max_length=150)),
                ('telefono_cliente', models.TextField(help_text='fecha de generacion de la proforma', max_length=150)),
                ('subtotal', models.FloatField(default=0, help_text='subtotal de la proforma')),
                ('monto_exento', models.FloatField(default=0, help_text='monto exento de la proforma')),
                ('impuesto', models.FloatField(default=0, help_text='impuesto')),
                ('total', models.FloatField(default=0, help_text='total de la proforma')),
                ('nota_entrega', models.TextField(default=False, help_text='fecha de generacion una nota de entrega?')),
                ('cliente', models.ForeignKey(help_text='cliente asociado', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.cliente')),
                ('empresa', models.ForeignKey(help_text='empresa asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.empresa')),
                ('pedido', models.ForeignKey(help_text='pedido asociado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='backend.pedido')),
                ('vendedor', models.ForeignKey(help_text='vendedor asociado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='backend.vendedor')),
            ],
        ),
        migrations.CreateModel(
            name='ProductoImagen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagen', models.ImageField(help_text='Imagen del producto', upload_to='productos')),
                ('principal', models.BooleanField(default=False, help_text='Es la imagen principal del producto?')),
                ('instancia', models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia')),
                ('producto', models.ForeignKey(help_text='Producto asociado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='backend.producto')),
            ],
        ),
        migrations.AddField(
            model_name='producto',
            name='unidad',
            field=models.ForeignKey(help_text='Unidad de medida del producto', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='backend.unidad'),
        ),
        migrations.CreateModel(
            name='Permiso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leer', models.BooleanField(default=True, help_text='Tiene opcion de leer?')),
                ('escribir', models.BooleanField(default=True, help_text='Tiene opcion de escribir?')),
                ('borrar', models.BooleanField(default=True, help_text='Tiene opcion de borrar?')),
                ('actualizar', models.BooleanField(default=True, help_text='Tiene opcion de actualizar?')),
                ('instancia', models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia')),
                ('menuinstancia', models.ForeignKey(help_text='Opcion de menu asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.menuinstancia')),
                ('perfil', models.ForeignKey(help_text='Usuario asociado', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.perfil')),
            ],
        ),
        migrations.AddField(
            model_name='pedido',
            name='vendedor',
            field=models.ForeignKey(help_text='vendedor asociado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='backend.vendedor'),
        ),
        migrations.CreateModel(
            name='NumerologiaFactura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.TextField(help_text='tipo de numerologia', max_length=100, null=True)),
                ('valor', models.TextField(help_text='valor que se utilizo en la venta', max_length=100, null=True)),
                ('factura', models.ForeignKey(help_text='venta asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.factura')),
                ('instancia', models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia')),
            ],
        ),
        migrations.CreateModel(
            name='NotaFactura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subtotal', models.FloatField(default=0, help_text='subtotal de la nota')),
                ('descripcion', models.TextField(help_text='descripcion del caso de la nota', max_length=150, null=True)),
                ('tipo', models.CharField(choices=[('C', 'Credito'), ('D', 'Debito')], default='C', help_text='que tipo de nota es', max_length=1)),
                ('fecha', models.DateTimeField(auto_now_add=True, help_text='fecha de la nota')),
                ('factura', models.ForeignKey(help_text='venta asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.factura')),
                ('instancia', models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotaCompra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subtotal', models.FloatField(default=0, help_text='subtotal de la nota')),
                ('descripcion', models.TextField(help_text='descripcion del caso de la nota', max_length=150, null=True)),
                ('tipo', models.CharField(choices=[('C', 'Credito'), ('D', 'Debito')], default='C', help_text='que tipo de nota es', max_length=1)),
                ('fecha', models.DateTimeField(auto_now_add=True, help_text='fecha de la nota')),
                ('compra', models.ForeignKey(help_text='subtotal del rubro', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.compra')),
                ('instancia', models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='menu',
            name='modulos',
            field=models.ManyToManyField(to='backend.Modulo'),
        ),
        migrations.AddField(
            model_name='menu',
            name='parent',
            field=models.ForeignKey(help_text='Si el menu es hijo de otro', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='backend.menu'),
        ),
        migrations.CreateModel(
            name='Lote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad_recepcion', models.FloatField(help_text='Cantidad de recepcion del producto', null=True)),
                ('fecha_vencimiento', models.DateField(help_text='Fecha de vencimiento del producto')),
                ('numero_lote', models.IntegerField(help_text='Numero de lote del producto', null=True)),
                ('cantida_disponible', models.FloatField(help_text='Cantidad disponible del producto')),
                ('instancia', models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia')),
                ('producto', models.ForeignKey(help_text='Producto base del lote', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.producto')),
            ],
        ),
        migrations.CreateModel(
            name='ListaPrecio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.TextField(help_text='nombre de la lista de precios?', max_length=150, null=True)),
                ('activo', models.BooleanField(default=True, help_text='esta lista de precios esta activa?')),
                ('instancia', models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia')),
            ],
        ),
        migrations.CreateModel(
            name='Inventario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disponible', models.FloatField(default=0, help_text='cantidad disponible')),
                ('transito', models.FloatField(default=0, help_text='cantidad en transito')),
                ('bloqueado', models.FloatField(default=0, help_text='cantidad bloqueada')),
                ('min', models.FloatField(help_text='Cantidad minima', null=True)),
                ('max', models.FloatField(help_text='Cantidad maxima', null=True)),
                ('almacen', models.ForeignKey(help_text='almacen asociado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='backend.almacen')),
                ('instancia', models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia')),
                ('producto', models.ForeignKey(help_text='producto asociado', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.producto')),
            ],
        ),
        migrations.AddField(
            model_name='instancia',
            name='modulos',
            field=models.ManyToManyField(to='backend.Modulo'),
        ),
        migrations.CreateModel(
            name='ImpuestosFactura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.TextField(help_text='nombre del impuesto asociado', max_length=100, null=True)),
                ('subtotal', models.FloatField(default=0, help_text='subtotal del impuesto asociado a la venta')),
                ('factura', models.ForeignKey(help_text='venta asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.factura')),
                ('instancia', models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia')),
            ],
        ),
        migrations.CreateModel(
            name='Impuestos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.TextField(help_text='Nombre del impuesto', max_length=30)),
                ('producto', models.BooleanField(default=False, help_text='afecta a solo ciertos productos?')),
                ('activo', models.BooleanField(default=False, help_text='esta activo?')),
                ('modificador', models.FloatField(help_text='Cual es el porcentaje modificador de subtotal')),
                ('regla', models.BooleanField(default=False, help_text='tiene una regla?')),
                ('min', models.FloatField(help_text='Cual es el valor minimo en subtotal', null=True)),
                ('max', models.FloatField(help_text='cual es el valor maximo en subtotal', null=True)),
                ('instancia', models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalVendedor',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.TextField(blank=True, help_text='nombre completo del vendedor', max_length=150)),
                ('identificador', models.TextField(blank=True, help_text='nombre completo del vendedor', max_length=150)),
                ('telefono', models.TextField(blank=True, help_text='telefono del vendedor', max_length=150)),
                ('correo', models.TextField(blank=True, help_text='correo asociado al vendedor', max_length=150)),
                ('activo', models.BooleanField(default=False, help_text='Esta activo?')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.instancia')),
            ],
            options={
                'verbose_name': 'historical vendedor',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUnidad',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.TextField(help_text='Nombre de la unidad de medida', max_length=30)),
                ('abreviatura', models.TextField(help_text='Abreviatura de la unidad de medida', max_length=10)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.instancia')),
            ],
            options={
                'verbose_name': 'historical unidad',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProveedor',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.TextField(blank=True, help_text='nombre del proveedor', max_length=150)),
                ('identificador', models.TextField(blank=True, help_text='identificador fiscal asociado', max_length=150)),
                ('ubicacion', models.TextField(blank=True, help_text='Ubicacion del proveedor', max_length=150)),
                ('credito', models.BooleanField(default=False, help_text='el proveedor da credito?')),
                ('imagen', models.TextField(help_text='imagen asociada al proveedor', max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('empresa', models.ForeignKey(blank=True, db_constraint=False, help_text='empresa asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.empresa')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.instancia')),
            ],
            options={
                'verbose_name': 'historical proveedor',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProforma',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre_cliente', models.TextField(help_text='Nombre del cliente en la proforma', max_length=150)),
                ('identificador_fiscal', models.TextField(help_text='Identificador fiscal del cliente en la venta', max_length=150)),
                ('direccion_cliente', models.TextField(help_text='telefono del cliente en la proforma', max_length=150)),
                ('telefono_cliente', models.TextField(help_text='fecha de generacion de la proforma', max_length=150)),
                ('subtotal', models.FloatField(default=0, help_text='subtotal de la proforma')),
                ('monto_exento', models.FloatField(default=0, help_text='monto exento de la proforma')),
                ('impuesto', models.FloatField(default=0, help_text='impuesto')),
                ('total', models.FloatField(default=0, help_text='total de la proforma')),
                ('nota_entrega', models.TextField(default=False, help_text='fecha de generacion una nota de entrega?')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('cliente', models.ForeignKey(blank=True, db_constraint=False, help_text='cliente asociado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.cliente')),
                ('empresa', models.ForeignKey(blank=True, db_constraint=False, help_text='empresa asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.empresa')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('pedido', models.ForeignKey(blank=True, db_constraint=False, help_text='pedido asociado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.pedido')),
                ('vendedor', models.ForeignKey(blank=True, db_constraint=False, help_text='vendedor asociado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.vendedor')),
            ],
            options={
                'verbose_name': 'historical proforma',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProductoImagen',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('imagen', models.TextField(help_text='Imagen del producto', max_length=100)),
                ('principal', models.BooleanField(default=False, help_text='Es la imagen principal del producto?')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.instancia')),
                ('producto', models.ForeignKey(blank=True, db_constraint=False, help_text='Producto asociado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.producto')),
            ],
            options={
                'verbose_name': 'historical producto imagen',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProducto',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.TextField(blank=True, help_text='Nombre del producto', max_length=150, null=True)),
                ('sku', models.TextField(help_text='SKU del producto', max_length=150)),
                ('servicio', models.BooleanField(default=False, help_text='¬øEs un servicio?')),
                ('lote_producto', models.BooleanField(default=False, help_text='¬øEsta en un lote?')),
                ('costo', models.FloatField(help_text='Costo del producto', null=True)),
                ('exonerado', models.BooleanField(default=False, help_text='¬øEsta exonerado el impuesto?')),
                ('venta_sin_inventario', models.BooleanField(default=False, help_text='¬øSe permite la venta del producto sin inventario?')),
                ('activo', models.BooleanField(default=True, help_text='¬øEl producto esta activo?')),
                ('menejo_inventario', models.BooleanField(default=True, help_text='¬øSe manejara inventario del producto?')),
                ('venta', models.BooleanField(default=True, help_text='¬øEs un producto que se puede vender?')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.instancia')),
                ('marca', models.ForeignKey(blank=True, db_constraint=False, help_text='Marca asociada al producto', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.marca')),
                ('unidad', models.ForeignKey(blank=True, db_constraint=False, help_text='Unidad de medida del producto', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.unidad')),
            ],
            options={
                'verbose_name': 'historical producto',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPermiso',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('leer', models.BooleanField(default=True, help_text='Tiene opcion de leer?')),
                ('escribir', models.BooleanField(default=True, help_text='Tiene opcion de escribir?')),
                ('borrar', models.BooleanField(default=True, help_text='Tiene opcion de borrar?')),
                ('actualizar', models.BooleanField(default=True, help_text='Tiene opcion de actualizar?')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.instancia')),
                ('menuinstancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Opcion de menu asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.menuinstancia')),
                ('perfil', models.ForeignKey(blank=True, db_constraint=False, help_text='Usuario asociado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.perfil')),
            ],
            options={
                'verbose_name': 'historical permiso',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPerfil',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('activo', models.BooleanField(default=True, help_text='esta el usuario activo?')),
                ('avatar', models.TextField(help_text='avatar para el usuario', max_length=100, null=True)),
                ('tipo', models.CharField(choices=[('S', 'Super'), ('A', 'Admin'), ('U', 'Usuario'), ('V', 'Vendedor')], default='U', help_text='Tipo de usuario', max_length=1, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.instancia')),
                ('usuario', models.ForeignKey(blank=True, db_constraint=False, help_text='usuario asociado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical perfil',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPedido',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('fecha_pedido', models.DateTimeField(blank=True, editable=False, help_text='fecha de generacion del pedido')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('cliente', models.ForeignKey(blank=True, db_constraint=False, help_text='cliente asociado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.cliente')),
                ('empresa', models.ForeignKey(blank=True, db_constraint=False, help_text='empresa asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.empresa')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.instancia')),
                ('vendedor', models.ForeignKey(blank=True, db_constraint=False, help_text='vendedor asociado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.vendedor')),
            ],
            options={
                'verbose_name': 'historical pedido',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalNumerologiaFactura',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('tipo', models.TextField(help_text='tipo de numerologia', max_length=100, null=True)),
                ('valor', models.TextField(help_text='valor que se utilizo en la venta', max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('factura', models.ForeignKey(blank=True, db_constraint=False, help_text='venta asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.factura')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.instancia')),
            ],
            options={
                'verbose_name': 'historical numerologia factura',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalNotaFactura',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('subtotal', models.FloatField(default=0, help_text='subtotal de la nota')),
                ('descripcion', models.TextField(help_text='descripcion del caso de la nota', max_length=150, null=True)),
                ('tipo', models.CharField(choices=[('C', 'Credito'), ('D', 'Debito')], default='C', help_text='que tipo de nota es', max_length=1)),
                ('fecha', models.DateTimeField(blank=True, editable=False, help_text='fecha de la nota')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('factura', models.ForeignKey(blank=True, db_constraint=False, help_text='venta asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.factura')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.instancia')),
            ],
            options={
                'verbose_name': 'historical nota factura',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalNotaCompra',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('subtotal', models.FloatField(default=0, help_text='subtotal de la nota')),
                ('descripcion', models.TextField(help_text='descripcion del caso de la nota', max_length=150, null=True)),
                ('tipo', models.CharField(choices=[('C', 'Credito'), ('D', 'Debito')], default='C', help_text='que tipo de nota es', max_length=1)),
                ('fecha', models.DateTimeField(blank=True, editable=False, help_text='fecha de la nota')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('compra', models.ForeignKey(blank=True, db_constraint=False, help_text='subtotal del rubro', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.compra')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.instancia')),
            ],
            options={
                'verbose_name': 'historical nota compra',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalModulo',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.TextField(max_length=20)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical modulo',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMenuInstancia',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('orden', models.IntegerField(default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.instancia')),
                ('menu', models.ForeignKey(blank=True, db_constraint=False, help_text='SuperMenu asociado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.menu')),
                ('parent', models.ForeignKey(blank=True, db_constraint=False, help_text='Si el menu es hijo de otro', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.menuinstancia')),
            ],
            options={
                'verbose_name': 'historical menu instancia',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMenu',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('router', models.CharField(help_text='Nombre la opcion de men√∫', max_length=150)),
                ('orden', models.IntegerField(default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, db_constraint=False, help_text='Si el menu es hijo de otro', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.menu')),
            ],
            options={
                'verbose_name': 'historical menu',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMarca',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.TextField(blank=True, help_text='Nombre de la marca', max_length=220)),
                ('logo', models.TextField(help_text='logo de la marca', max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.instancia')),
            ],
            options={
                'verbose_name': 'historical marca',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLote',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('cantidad_recepcion', models.FloatField(help_text='Cantidad de recepcion del producto', null=True)),
                ('fecha_vencimiento', models.DateField(help_text='Fecha de vencimiento del producto')),
                ('numero_lote', models.IntegerField(help_text='Numero de lote del producto', null=True)),
                ('cantida_disponible', models.FloatField(help_text='Cantidad disponible del producto')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.instancia')),
                ('producto', models.ForeignKey(blank=True, db_constraint=False, help_text='Producto base del lote', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.producto')),
            ],
            options={
                'verbose_name': 'historical lote',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalInventario',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('disponible', models.FloatField(default=0, help_text='cantidad disponible')),
                ('transito', models.FloatField(default=0, help_text='cantidad en transito')),
                ('bloqueado', models.FloatField(default=0, help_text='cantidad bloqueada')),
                ('min', models.FloatField(help_text='Cantidad minima', null=True)),
                ('max', models.FloatField(help_text='Cantidad maxima', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('almacen', models.ForeignKey(blank=True, db_constraint=False, help_text='almacen asociado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.almacen')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.instancia')),
                ('producto', models.ForeignKey(blank=True, db_constraint=False, help_text='producto asociado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.producto')),
            ],
            options={
                'verbose_name': 'historical inventario',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalInstancia',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.TextField(help_text='Nombre de la instancia', max_length=150)),
                ('activo', models.BooleanField(default=True, help_text='esta la instancia activa?')),
                ('multiempresa', models.BooleanField(default=True, help_text='esta la instancia es multiempresa?')),
                ('vencimiento', models.DateTimeField(help_text='Fecha de vencimiento de la instancia', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical instancia',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalImpuestosFactura',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.TextField(help_text='nombre del impuesto asociado', max_length=100, null=True)),
                ('subtotal', models.FloatField(default=0, help_text='subtotal del impuesto asociado a la venta')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('factura', models.ForeignKey(blank=True, db_constraint=False, help_text='venta asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.factura')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.instancia')),
            ],
            options={
                'verbose_name': 'historical impuestos factura',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalImpuestos',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.TextField(help_text='Nombre del impuesto', max_length=30)),
                ('producto', models.BooleanField(default=False, help_text='afecta a solo ciertos productos?')),
                ('activo', models.BooleanField(default=False, help_text='esta activo?')),
                ('modificador', models.FloatField(help_text='Cual es el porcentaje modificador de subtotal')),
                ('regla', models.BooleanField(default=False, help_text='tiene una regla?')),
                ('min', models.FloatField(help_text='Cual es el valor minimo en subtotal', null=True)),
                ('max', models.FloatField(help_text='cual es el valor maximo en subtotal', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.instancia')),
            ],
            options={
                'verbose_name': 'historical impuestos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFactura',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre_empresa', models.TextField(help_text='empresa asociada', max_length=150)),
                ('telefonocontacto_empresa', models.TextField(help_text='empresa asociada', max_length=150)),
                ('direccion_empresa', models.TextField(help_text='empresa asociada', max_length=150)),
                ('nombre_cliente', models.TextField(help_text='Nombre del cliente en la venta', max_length=150)),
                ('identificador_fiscal', models.TextField(help_text='Identificador fiscal del cliente en la venta', max_length=150)),
                ('direccion_cliente', models.TextField(help_text='telefono del cliente en la venta', max_length=150)),
                ('telefono_cliente', models.TextField(help_text='empresa asociada', max_length=150)),
                ('nombre_vendedor', models.TextField(help_text='vendedor asociado', max_length=150, null=True)),
                ('telefono_vendedor', models.TextField(help_text='empresa asociada', max_length=150)),
                ('fecha_factura', models.TextField(help_text='fecha de generacion de la venta', max_length=150)),
                ('subtotal', models.TextField(default=0, help_text='subtotal de la venta', max_length=150)),
                ('monto_exento', models.TextField(default=0, help_text='monto exento de la proforma', max_length=150)),
                ('impuesto', models.TextField(default=0, help_text='monto exento de la proforma', max_length=150)),
                ('total', models.TextField(default=0, help_text='total de la venta', max_length=150)),
                ('tipo_pago', models.TextField(help_text='tipo de pago utilizado por el cliente de la venta', max_length=150)),
                ('credito', models.TextField(default=False, help_text='La venta se realizo a credito?')),
                ('dias_credito', models.TextField(default=0, help_text='dias de credito?', null=True)),
                ('nota_entrega', models.TextField(default=False, help_text='fecha de generacion una nota de entrega?')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.instancia')),
                ('pedido', models.ForeignKey(blank=True, db_constraint=False, help_text='pedido asociado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.pedido')),
                ('proforma', models.ForeignKey(blank=True, db_constraint=False, help_text='proforma asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.proforma')),
            ],
            options={
                'verbose_name': 'historical factura',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEmpresa',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.TextField(help_text='Razon social de la empresa', max_length=150)),
                ('direccion_fiscal', models.TextField(help_text='direccion fiscal de la empresa', max_length=150)),
                ('logo', models.TextField(help_text='logo de la empresa', max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.instancia')),
            ],
            options={
                'verbose_name': 'historical empresa',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDetalleProforma',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('descripcion', models.TextField(help_text='En caso de no tener un producto asociado se puede colocar una descripcion del rublo ac√°', max_length=150, null=True)),
                ('precio', models.TextField(default=0, help_text='precio del producto o servicio a vender')),
                ('subtotal', models.TextField(default=0, help_text='Precio por la cantidad del producto')),
                ('inventario', models.TextField(default=True, help_text='La venta afecta el inventario?')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.instancia')),
                ('lote_producto', models.ForeignKey(blank=True, db_constraint=False, help_text='Lote del producto asociado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.lote')),
                ('producto', models.ForeignKey(blank=True, db_constraint=False, help_text='detallepedido asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.producto')),
                ('proforma', models.ForeignKey(blank=True, db_constraint=False, help_text='proforma asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.proforma')),
            ],
            options={
                'verbose_name': 'historical detalle proforma',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDetallePedido',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('cantidad', models.FloatField(default=0, help_text='Cantidad vendida')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.instancia')),
                ('pedido', models.ForeignKey(blank=True, db_constraint=False, help_text='pedido asociado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.pedido')),
                ('producto', models.ForeignKey(blank=True, db_constraint=False, help_text='producto asociado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.producto')),
            ],
            options={
                'verbose_name': 'historical detalle pedido',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDetalleListaPrecio',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('precio', models.FloatField(default=0, help_text='precio del producto en la lista')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.instancia')),
                ('listaprecio', models.ForeignKey(blank=True, db_constraint=False, help_text='Lista de precio asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.listaprecio')),
                ('producto', models.ForeignKey(blank=True, db_constraint=False, help_text='producto asociado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.producto')),
            ],
            options={
                'verbose_name': 'historical detalle lista precio',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDetalleFactura',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('lote_producto', models.TextField(help_text='Lote fijo asociado del producto asociado', max_length=150, null=True)),
                ('fecha_vencimiento', models.TextField(help_text='Fecha de vencimiento del lote', max_length=150, null=True)),
                ('producto', models.TextField(help_text='producto asociado', max_length=150)),
                ('descripcion', models.TextField(help_text='En caso de no tener un producto asociado se puede colocar una descripcion del rublo aca', max_length=150, null=True)),
                ('cantidad', models.TextField(default=True, help_text='La venta afecta el inventario?', max_length=150)),
                ('precio', models.TextField(default=0, help_text='precio del producto o servicio a vender', max_length=150)),
                ('subtotal', models.TextField(default=0, help_text='subtotal del producto', max_length=150)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('factura', models.ForeignKey(blank=True, db_constraint=False, help_text='venta asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.factura')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.instancia')),
                ('lote', models.ForeignKey(blank=True, db_constraint=False, help_text='Lote asociado del producto', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.lote')),
            ],
            options={
                'verbose_name': 'historical detalle factura',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDetalleCompra',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('descripcion', models.TextField(help_text='en caso de no tener producto asociado a la compra se puede colocar una descripcion del rubro', max_length=150, null=True)),
                ('cantidad', models.FloatField(default=0, help_text='cantidad comprada')),
                ('servicio', models.BooleanField(default=False, help_text='se compro un servicio?')),
                ('inventario', models.BooleanField(default=False, help_text='la compra afectara el inventario?')),
                ('precio', models.FloatField(blank=True, default=0, help_text='precio del rubro', null=True)),
                ('subtotal', models.FloatField(blank=True, default=0, help_text='subtotal del rubro', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('compra', models.ForeignKey(blank=True, db_constraint=False, help_text='compra asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.compra')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.instancia')),
                ('producto', models.ForeignKey(blank=True, db_constraint=False, help_text='producto asociado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.producto')),
            ],
            options={
                'verbose_name': 'historical detalle compra',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCompra',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('fecha_factura', models.DateTimeField(blank=True, editable=False, help_text='fecha de la factura de compra')),
                ('numero_factura', models.TextField(help_text='numero de la factura', max_length=150)),
                ('numero_control', models.TextField(help_text='numero de control', max_length=150, null=True)),
                ('subtotal', models.FloatField(default=0, help_text='subtotal de la factura')),
                ('impuestos', models.FloatField(default=0, help_text='total en impuestos')),
                ('total', models.FloatField(default=0, help_text='total en factura')),
                ('tipo_pago', models.TextField(help_text='tipo de pago utilizado', max_length=150)),
                ('credito', models.BooleanField(default=False, help_text='la factura es a credito?')),
                ('dias_credito', models.IntegerField(default=0, help_text='cuantos dias de credito?', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('Proveedor', models.ForeignKey(blank=True, db_constraint=False, help_text='proveedor asoaciado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.cliente')),
                ('empresa', models.ForeignKey(blank=True, db_constraint=False, help_text='empresa asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.empresa')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.instancia')),
            ],
            options={
                'verbose_name': 'historical compra',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCliente',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.TextField(blank=True, help_text='Razon social del cliente', max_length=150)),
                ('identificador', models.TextField(blank=True, help_text='Numero de indentificacion fiscal', max_length=150)),
                ('ubicacion', models.TextField(blank=True, help_text='Ubicacion o direccion del cliente', max_length=150)),
                ('credito', models.BooleanField(default=False, help_text='Se le puede vender a credito?')),
                ('imagen', models.TextField(help_text='Imagen o logo asociado al cliente', max_length=100, null=True)),
                ('activo', models.BooleanField(default=False, help_text='Esta activo?')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.instancia')),
                ('vendedor', models.ForeignKey(blank=True, db_constraint=False, help_text='vendedor asociado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.vendedor')),
            ],
            options={
                'verbose_name': 'historical cliente',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAlmacen',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.TextField(blank=True, help_text='Nombre del almacen', max_length=220)),
                ('activo', models.BooleanField(default=False, help_text='El almacen esta activo?')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instancia', models.ForeignKey(blank=True, db_constraint=False, help_text='Instancia asociada', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.instancia')),
            ],
            options={
                'verbose_name': 'historical almacen',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='factura',
            name='instancia',
            field=models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia'),
        ),
        migrations.AddField(
            model_name='factura',
            name='pedido',
            field=models.ForeignKey(help_text='pedido asociado', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.pedido'),
        ),
        migrations.AddField(
            model_name='factura',
            name='proforma',
            field=models.ForeignKey(help_text='proforma asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.proforma'),
        ),
        migrations.AddField(
            model_name='empresa',
            name='instancia',
            field=models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia'),
        ),
        migrations.CreateModel(
            name='DetalleProforma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.TextField(help_text='En caso de no tener un producto asociado se puede colocar una descripcion del rublo ac√°', max_length=150, null=True)),
                ('precio', models.TextField(default=0, help_text='precio del producto o servicio a vender')),
                ('subtotal', models.TextField(default=0, help_text='Precio por la cantidad del producto')),
                ('inventario', models.TextField(default=True, help_text='La venta afecta el inventario?')),
                ('instancia', models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia')),
                ('lote_producto', models.ForeignKey(help_text='Lote del producto asociado', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.lote')),
                ('producto', models.ForeignKey(help_text='detallepedido asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.producto')),
                ('proforma', models.ForeignKey(help_text='proforma asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.proforma')),
            ],
        ),
        migrations.CreateModel(
            name='DetallePedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.FloatField(default=0, help_text='Cantidad vendida')),
                ('instancia', models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia')),
                ('pedido', models.ForeignKey(help_text='pedido asociado', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.pedido')),
                ('producto', models.ForeignKey(help_text='producto asociado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='backend.producto')),
            ],
        ),
        migrations.CreateModel(
            name='DetalleListaPrecio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('precio', models.FloatField(default=0, help_text='precio del producto en la lista')),
                ('instancia', models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia')),
                ('listaprecio', models.ForeignKey(help_text='Lista de precio asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.listaprecio')),
                ('producto', models.ForeignKey(help_text='producto asociado', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.producto')),
            ],
        ),
        migrations.CreateModel(
            name='DetalleFactura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lote_producto', models.TextField(help_text='Lote fijo asociado del producto asociado', max_length=150, null=True)),
                ('fecha_vencimiento', models.TextField(help_text='Fecha de vencimiento del lote', max_length=150, null=True)),
                ('producto', models.TextField(help_text='producto asociado', max_length=150)),
                ('descripcion', models.TextField(help_text='En caso de no tener un producto asociado se puede colocar una descripcion del rublo aca', max_length=150, null=True)),
                ('cantidad', models.TextField(default=True, help_text='La venta afecta el inventario?', max_length=150)),
                ('precio', models.TextField(default=0, help_text='precio del producto o servicio a vender', max_length=150)),
                ('subtotal', models.TextField(default=0, help_text='subtotal del producto', max_length=150)),
                ('factura', models.ForeignKey(help_text='venta asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.factura')),
                ('instancia', models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia')),
                ('lote', models.ForeignKey(help_text='Lote asociado del producto', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.lote')),
            ],
        ),
        migrations.CreateModel(
            name='DetalleCompra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.TextField(help_text='en caso de no tener producto asociado a la compra se puede colocar una descripcion del rubro', max_length=150, null=True)),
                ('cantidad', models.FloatField(default=0, help_text='cantidad comprada')),
                ('servicio', models.BooleanField(default=False, help_text='se compro un servicio?')),
                ('inventario', models.BooleanField(default=False, help_text='la compra afectara el inventario?')),
                ('precio', models.FloatField(blank=True, default=0, help_text='precio del rubro', null=True)),
                ('subtotal', models.FloatField(blank=True, default=0, help_text='subtotal del rubro', null=True)),
                ('compra', models.ForeignKey(help_text='compra asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.compra')),
                ('instancia', models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia')),
                ('producto', models.ForeignKey(help_text='producto asociado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='backend.producto')),
            ],
        ),
        migrations.CreateModel(
            name='ContactoEmpresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.TextField(help_text='nombre del contacto', max_length=150)),
                ('telefono', models.TextField(help_text='telefono del contacto', max_length=150)),
                ('mail', models.TextField(help_text='correo electronico del contacto', max_length=150)),
                ('empresa', models.ForeignKey(help_text='empresa asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.empresa')),
                ('instancia', models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia')),
            ],
        ),
        migrations.CreateModel(
            name='ContactoCliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.TextField(help_text='Nombre del contacto', max_length=150)),
                ('telefono', models.TextField(help_text='telefono del contacto', max_length=150)),
                ('mail', models.TextField(help_text='correo electronico del contacto', max_length=150)),
                ('cliente', models.ForeignKey(help_text='Cliente asociado', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.cliente')),
                ('instancia', models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia')),
            ],
        ),
        migrations.CreateModel(
            name='ConfiguracionPapeleria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefijo', models.TextField(blank=True, help_text='prefijo para el numero', max_length=10, null=True)),
                ('formato', models.TextField(blank=True, help_text='formato de numero con 0 adelante 0000000', max_length=20, null=True)),
                ('valor', models.IntegerField(help_text='valor actual del numero')),
                ('tipo', models.CharField(choices=[('F', 'Factura'), ('N', 'Nota entrega'), ('C', 'Nota credito'), ('D', 'Nota debito')], default='F', help_text='tipo de numero', max_length=1)),
                ('empresa', models.ForeignKey(help_text='empresa asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.empresa')),
                ('instancia', models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia')),
            ],
        ),
        migrations.AddField(
            model_name='compra',
            name='empresa',
            field=models.ForeignKey(help_text='empresa asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.empresa'),
        ),
        migrations.AddField(
            model_name='compra',
            name='instancia',
            field=models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='instancia',
            field=models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='vendedor',
            field=models.ForeignKey(help_text='vendedor asociado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='backend.vendedor'),
        ),
        migrations.AddField(
            model_name='almacen',
            name='instancia',
            field=models.ForeignKey(help_text='Instancia asociada', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.instancia'),
        ),
    ]
